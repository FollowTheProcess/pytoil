name: CI

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install nox

      - name: Run Tests and Coverage
        run: nox --non-interactive --session "test-${{ matrix.python-version }}"

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install nox

      - name: Lint
        run: nox --non-interactive --session "lint"

  docs:
    name: Docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install nox

      - name: Build Docs
        run: nox --non-interactive --session "docs"

  publish-docs:
    needs: docs
    name: Publish Docs
    runs-on: ubuntu-latest
    # Only publish docs automatically on new release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install .[docs]

      - name: Deploy Docs to GitHub Pages
        env:
          # Use the built in CI GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote add gh-token "https://${GITHUB_TOKEN}@github.com/FollowTheProcess/pytoil.git";
          git fetch gh-token && git fetch gh-token gh-pages:gh-pages;
          mkdocs gh-deploy -v --clean --remote-name gh-token;

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint, docs, publish-docs]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        # Uses pypa build https://pypa-build.readthedocs.io/en/latest/
        # For full PEP517/518 compliance
        run: python3 -m pip install --upgrade pip setuptools wheel twine build

      - name: Build sdist and wheel
        run: python3 -m build --sdist --wheel
      - name: Publish Distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Generate GitHub Release Changelog
        run: bash .github/scripts/changelog.sh > ${{ github.workflow }}_CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          body_path: ${{ github.workflow }}_CHANGELOG.md
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            dist/*
